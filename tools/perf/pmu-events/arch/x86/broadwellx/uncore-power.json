[
    {
        "BriefDescription": "PCU clock ticks. Use to get percentages of PCU cycles events. Derived from unc_p_clockticks",
        "Counter": "0,1,2,3",
        "EventName": "UNC_P_CLOCKTICKS",
        "PerPkg": "1",
        "Unit": "PCU"
    },
    {
        "BriefDescription": "C0 and C1. Derived from unc_p_power_state_occupancy.cores_c0",
        "Counter": "0,1,2,3",
        "EventCode": "0x80",
        "EventName": "UNC_P_POWER_STATE_OCCUPANCY.CORES_C0",
        "Filter": "occ_sel=1",
        "MetricExpr": "(UNC_P_POWER_STATE_OCCUPANCY.CORES_C0 / UNC_P_CLOCKTICKS) * 100.",
        "PerPkg": "1",
        "Unit": "PCU"
    },
    {
        "BriefDescription": "C3. Derived from unc_p_power_state_occupancy.cores_c3",
        "Counter": "0,1,2,3",
        "EventCode": "0x80",
        "EventName": "UNC_P_POWER_STATE_OCCUPANCY.CORES_C3",
        "Filter": "occ_sel=2",
        "MetricExpr": "(UNC_P_POWER_STATE_OCCUPANCY.CORES_C3 / UNC_P_CLOCKTICKS) * 100.",
        "PerPkg": "1",
        "Unit": "PCU"
    },
    {
        "BriefDescription": "C6 and C7. Derived from unc_p_power_state_occupancy.cores_c6",
        "Counter": "0,1,2,3",
        "EventCode": "0x80",
        "EventName": "UNC_P_POWER_STATE_OCCUPANCY.CORES_C6",
        "Filter": "occ_sel=3",
        "MetricExpr": "(UNC_P_POWER_STATE_OCCUPANCY.CORES_C6 / UNC_P_CLOCKTICKS) * 100.",
        "PerPkg": "1",
        "Unit": "PCU"
    },
    {
        "BriefDescription": "External Prochot. Derived from unc_p_prochot_external_cycles",
        "Counter": "0,1,2,3",
        "EventCode": "0xA",
        "EventName": "UNC_P_PROCHOT_EXTERNAL_CYCLES",
        "MetricExpr": "(UNC_P_PROCHOT_EXTERNAL_CYCLES / UNC_P_CLOCKTICKS) * 100.",
        "PerPkg": "1",
        "Unit": "PCU"
    },
    {
        "BriefDescription": "Thermal Strongest Upper Limit Cycles. Derived from unc_p_freq_max_limit_thermal_cycles",
        "Counter": "0,1,2,3",
        "EventCode": "0x4",
        "EventName": "UNC_P_FREQ_MAX_LIMIT_THERMAL_CYCLES",
        "MetricExpr": "(UNC_P_FREQ_MAX_LIMIT_THERMAL_CYCLES / UNC_P_CLOCKTICKS) * 100.",
        "PerPkg": "1",
        "Unit": "PCU"
    },
    {
        "BriefDescription": "OS Strongest Upper Limit Cycles. Derived from unc_p_freq_max_os_cycles",
        "Counter": "0,1,2,3",
        "EventCode": "0x6",
        "EventName": "UNC_P_FREQ_MAX_OS_CYCLES",
        "MetricExpr": "(UNC_P_FREQ_MAX_OS_CYCLES / UNC_P_CLOCKTICKS) * 100.",
        "PerPkg": "1",
        "Unit": "PCU"
    },
    {
        "BriefDescription": "Power Strongest Upper Limit Cycles. Derived from unc_p_freq_max_power_cycles",
        "Counter": "0,1,2,3",
        "EventCode": "0x5",
        "EventName": "UNC_P_FREQ_MAX_POWER_CYCLES",
        "MetricExpr": "(UNC_P_FREQ_MAX_POWER_CYCLES / UNC_P_CLOCKTICKS) * 100.",
        "PerPkg": "1",
        "Unit": "PCU"
    },
    {
        "BriefDescription": "Cycles spent changing Frequency. Derived from unc_p_freq_trans_cycles",
        "Counter": "0,1,2,3",
        "EventCode": "0x74",
        "EventName": "UNC_P_FREQ_TRANS_CYCLES",
        "MetricExpr": "(UNC_P_FREQ_TRANS_CYCLES / UNC_P_CLOCKTICKS) * 100.",
        "PerPkg": "1",
        "Unit": "PCU"
    }
]
